{"ast":null,"code":"class AuthApi {\n  constructor({\n    baseUrl\n  }) {\n    this._baseUrl = baseUrl;\n  }\n  _handleResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Произошла ошибка: ${response.status}`);\n  }\n  _request(url, options) {\n    return fetch(url, options).then(this._handleResponse);\n  }\n  register(body) {\n    return this._request(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n  }\n  login(body) {\n    return this._request(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n  }\n  checkToken(token) {\n    return this._request(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\nexport const auth = new AuthApi({\n  baseUrl: \"https://auth.nomoreparties.co\"\n});","map":{"version":3,"names":["AuthApi","constructor","baseUrl","_baseUrl","_handleResponse","response","ok","json","Promise","reject","status","_request","url","options","fetch","then","register","body","method","headers","JSON","stringify","login","checkToken","token","Authorization","auth"],"sources":["/Users/macbook/Desktop/dev/mesto-react-auth/react-mesto-auth/src/utils/AuthApi.js"],"sourcesContent":["class AuthApi {\r\n  constructor({ baseUrl }) {\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  _handleResponse(response) {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Произошла ошибка: ${response.status}`);\r\n  }\r\n\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._handleResponse);\r\n  }\r\n\r\n  register(body) {\r\n    return this._request(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n\r\n  login(body) {\r\n    return this._request(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n\r\n  checkToken(token) {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport const auth = new AuthApi({\r\n  baseUrl: \"https://auth.nomoreparties.co\",\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACZC,WAAWA,CAAC;IAAEC;EAAQ,CAAC,EAAE;IACvB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EACzB;EAEAE,eAAeA,CAACC,QAAQ,EAAE;IACxB,IAAIA,QAAQ,CAACC,EAAE,EAAE;MACf,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,qBAAoBJ,QAAQ,CAACK,MAAO,EAAC,CAAC;EAC/D;EAEAC,QAAQA,CAACC,GAAG,EAAEC,OAAO,EAAE;IACrB,OAAOC,KAAK,CAACF,GAAG,EAAEC,OAAO,CAAC,CAACE,IAAI,CAAC,IAAI,CAACX,eAAe,CAAC;EACvD;EAEAY,QAAQA,CAACC,IAAI,EAAE;IACb,OAAO,IAAI,CAACN,QAAQ,CAAE,GAAE,IAAI,CAACR,QAAS,SAAQ,EAAE;MAC9Ce,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEAK,KAAKA,CAACL,IAAI,EAAE;IACV,OAAO,IAAI,CAACN,QAAQ,CAAE,GAAE,IAAI,CAACR,QAAS,SAAQ,EAAE;MAC9Ce,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEAM,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAO,IAAI,CAACb,QAAQ,CAAE,GAAE,IAAI,CAACR,QAAS,WAAU,EAAE;MAChDe,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCM,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAME,IAAI,GAAG,IAAI1B,OAAO,CAAC;EAC9BE,OAAO,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}